// src/mocks/handlers.js
import { http, HttpResponse } from "msw";

export const handlers = [
  // Intercept "GET https://example.com/user" requests...
  http.post("/api/code", (req) => {
    console.log("Request data:", req);
    // ...and respond to them using this JSON response.
    return HttpResponse.json([
      {
        variables: [
          {
            depth: 1,
            expr: "6",
            name: "a",
          },
        ],
        type: "assignViz",
      },
      {
        id: 1,
        depth: 1,
        condition: {
          target: "i",
          cur: 0,
          start: 0,
          end: 3,
          step: 1,
        },
        highlight: ["target", "cur", "start", "end", "step"],
        type: "for",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (a // 2 - i)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (6 // 2 - 0)",
        highlight: [7, 16],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: "   ",
        highlight: [0, 1, 2],
        console: "   ",
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * i + 1)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * 0 + 1)",
        highlight: [11],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "*",
        highlight: [0],
        console: "*\n",
        type: "print",
      },
      {
        id: 1,
        depth: 1,
        condition: {
          target: "i",
          cur: 1,
          start: 0,
          end: 3,
          step: 1,
        },
        highlight: ["cur"],
        type: "for",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (a // 2 - i)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (6 // 2 - 1)",
        highlight: [7, 16],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: "  ",
        highlight: [0, 1],
        console: "  ",
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * i + 1)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * 1 + 1)",
        highlight: [11],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "***",
        highlight: [0, 1, 2],
        console: "***\n",
        type: "print",
      },
      {
        id: 1,
        depth: 1,
        condition: {
          target: "i",
          cur: 2,
          start: 0,
          end: 3,
          step: 1,
        },
        highlight: ["cur"],
        type: "for",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (a // 2 - i)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: "' ' * (6 // 2 - 2)",
        highlight: [7, 16],
        console: null,
        type: "print",
      },
      {
        id: 2,
        depth: 2,
        expr: " ",
        highlight: [0],
        console: " ",
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * i + 1)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "'*' * (2 * 2 + 1)",
        highlight: [11],
        console: null,
        type: "print",
      },
      {
        id: 3,
        depth: 2,
        expr: "*****",
        highlight: [0, 1, 2, 3, 4],
        console: "*****\n",
        type: "print",
      },
      {
        id: 4,
        depth: 1,
        condition: {
          target: "i",
          cur: 0,
          start: 0,
          end: 2,
          step: 1,
        },
        highlight: ["target", "cur", "start", "end", "step"],
        type: "for",
      },
      {
        id: 5,
        depth: 2,
        expr: "' ' * (i + 2)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 5,
        depth: 2,
        expr: "' ' * (0 + 2)",
        highlight: [7],
        console: null,
        type: "print",
      },
      {
        id: 5,
        depth: 2,
        expr: "  ",
        highlight: [0, 1],
        console: "  ",
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "'*' * (a // 2 * 2 - 3 - 2 * i)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "'*' * (6 // 2 * 2 - 3 - 2 * 0)",
        highlight: [7, 28],
        console: null,
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "***",
        highlight: [0, 1, 2],
        console: "***\n",
        type: "print",
      },
      {
        id: 4,
        depth: 1,
        condition: {
          target: "i",
          cur: 1,
          start: 0,
          end: 2,
          step: 1,
        },
        highlight: ["cur"],
        type: "for",
      },
      {
        id: 5,
        depth: 2,
        expr: "' ' * (i + 2)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 5,
        depth: 2,
        expr: "' ' * (1 + 2)",
        highlight: [7],
        console: null,
        type: "print",
      },
      {
        id: 5,
        depth: 2,
        expr: "   ",
        highlight: [0, 1, 2],
        console: "   ",
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "'*' * (a // 2 * 2 - 3 - 2 * i)",
        highlight: [],
        console: null,
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "'*' * (6 // 2 * 2 - 3 - 2 * 1)",
        highlight: [7, 28],
        console: null,
        type: "print",
      },
      {
        id: 6,
        depth: 2,
        expr: "*",
        highlight: [0],
        console: "*\n",
        type: "print",
      },
    ]);
  }),
];
